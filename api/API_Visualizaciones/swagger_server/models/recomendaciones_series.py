# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.ap_isuario_yamlcomponentsschemasusuarios import APIsuarioYamlcomponentsschemasusuarios  # noqa: F401,E501
from swagger_server.models.api_contenidoscomponentsschemasseries import APIContenidoscomponentsschemasseries  # noqa: F401,E501
from swagger_server import util


class RecomendacionesSeries(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, usuario: APIsuarioYamlcomponentsschemasusuarios=None, recomendaciones: List[APIContenidoscomponentsschemasseries]=None):  # noqa: E501
        """RecomendacionesSeries - a model defined in Swagger

        :param id: The id of this RecomendacionesSeries.  # noqa: E501
        :type id: str
        :param usuario: The usuario of this RecomendacionesSeries.  # noqa: E501
        :type usuario: APIsuarioYamlcomponentsschemasusuarios
        :param recomendaciones: The recomendaciones of this RecomendacionesSeries.  # noqa: E501
        :type recomendaciones: List[APIContenidoscomponentsschemasseries]
        """
        self.swagger_types = {
            'id': str,
            'usuario': APIsuarioYamlcomponentsschemasusuarios,
            'recomendaciones': List[APIContenidoscomponentsschemasseries]
        }

        self.attribute_map = {
            'id': 'id',
            'usuario': 'usuario',
            'recomendaciones': 'recomendaciones'
        }
        self._id = id
        self._usuario = usuario
        self._recomendaciones = recomendaciones

    @classmethod
    def from_dict(cls, dikt) -> 'RecomendacionesSeries':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The recomendacionesSeries of this RecomendacionesSeries.  # noqa: E501
        :rtype: RecomendacionesSeries
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this RecomendacionesSeries.


        :return: The id of this RecomendacionesSeries.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this RecomendacionesSeries.


        :param id: The id of this RecomendacionesSeries.
        :type id: str
        """

        self._id = id

    @property
    def usuario(self) -> APIsuarioYamlcomponentsschemasusuarios:
        """Gets the usuario of this RecomendacionesSeries.


        :return: The usuario of this RecomendacionesSeries.
        :rtype: APIsuarioYamlcomponentsschemasusuarios
        """
        return self._usuario

    @usuario.setter
    def usuario(self, usuario: APIsuarioYamlcomponentsschemasusuarios):
        """Sets the usuario of this RecomendacionesSeries.


        :param usuario: The usuario of this RecomendacionesSeries.
        :type usuario: APIsuarioYamlcomponentsschemasusuarios
        """

        self._usuario = usuario

    @property
    def recomendaciones(self) -> List[APIContenidoscomponentsschemasseries]:
        """Gets the recomendaciones of this RecomendacionesSeries.


        :return: The recomendaciones of this RecomendacionesSeries.
        :rtype: List[APIContenidoscomponentsschemasseries]
        """
        return self._recomendaciones

    @recomendaciones.setter
    def recomendaciones(self, recomendaciones: List[APIContenidoscomponentsschemasseries]):
        """Sets the recomendaciones of this RecomendacionesSeries.


        :param recomendaciones: The recomendaciones of this RecomendacionesSeries.
        :type recomendaciones: List[APIContenidoscomponentsschemasseries]
        """

        self._recomendaciones = recomendaciones
